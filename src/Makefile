CXX			= /usr/bin/g++
CXXFLAGS	= -std=c++20 -MMD -MP
LDFLAGS		= -L../OpenRGB-cppSDK/build
LDLIBS 		= -lorgbsdk
# SRCDIRS 	= $(wildcard */)
# IFLAGS		= $(foreach dir,$(SRCDIRS), -I$(dir))
# IFLAGS      += $(foreach dir,$(SRCDIRS), -I../$(dir))
IFLAGS      = -I../OpenRGB-cppSDK/include


OBJECT_DIR 	= ../build
EXEC 		= ../gz-rgb

SRC 		= $(wildcard *.cpp) $(wildcard */*.cpp) 
# OBJECTS 	= $(SRC:%.cpp=$(OBJECT_DIR)/%.o)
OBJECTS 	= $($(notdir SRC):%.cpp=$(OBJECT_DIR)/%.o)
OBJECT_DIRS = $(OBJECT_DIR) $(foreach dir,$(SRCDIRS), $(OBJECT_DIR)/$(dir))
DEPENDS 	= ${OBJECTS:.o=.d}

CXXFLAGS    += $(IFLAGS)


default: $(EXEC)
	echo $(OBJECTS)

.PHONY: release
release: CXXFLAGS += -O3
release : default

# rule for the executable
$(EXEC): $(OBJECT_DIRS) $(OBJECT_DIR)/.OpenRGB-cppSDK_stamp $(OBJECTS) 
	$(CXX) $(OBJECTS) -o $@ $(CXXFLAGS) $(LDFLAGS) $(LDLIBS)
# include the makefiles generated by the -M flag
-include $(DEPENDS)

# rule for all ../build/*.o files
$(OBJECT_DIR)/%.o: $(shell echo $<) %.cpp
	$(CXX) -c $< -o $@ $(CXXFLAGS) $(LDFLAGS) $(LDLIBS)

# dependecy
$(OBJECT_DIR)/.OpenRGB-cppSDK_stamp:
	mkdir -p ../OpenRGB-cppSDK/build
	cd ../OpenRGB-cppSDK/build && cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ../ && make
	touch $(OBJECT_DIR)/.OpenRGB-cppSDK_stamp


$(OBJECT_DIRS):
	echo "Making object dir $@"
	mkdir -p $@

#
# Extra Options
#
# with debug flags
.PHONY += install debug run clean docs 

install:
	install -D -m 751 $(EXEC) $(DESTDIR)/usr/bin/gz-rgb
	install -D -m 644 ../gz-rgb.service $(DESTDIR)/usr/lib/systemd/system/gz-rgb.service


debug: CXXFLAGS += -g +Wextra # -DDEBUG 
debug: default

# make with debug flags and run afterwards
run: CXXFLAGS += -g
run: default
	$(CXX) $(OBJECTS) -o $(EXEC) $(CXXFLAGS) $(LDFLAGS) $(LDLIBS)
	./$(EXEC)

# remove all object and dependecy files
clean:
	-rm -r $(OBJECT_DIR)
	-rm $(EXEC)
	-rm -r ../OpenRGB-cppSDK/build

docs:
	doxygen .doxygen_config
